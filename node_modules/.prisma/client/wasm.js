
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.12.0
 * Query Engine version: 8047c96bbd92db98a2abc7c9323ce77c02c89dbc
 */
Prisma.prismaVersion = {
  client: "6.12.0",
  engine: "8047c96bbd92db98a2abc7c9323ce77c02c89dbc"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.BairroPrioridadesScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cidade: 'cidade',
  estado: 'estado',
  ativo: 'ativo',
  tipo_prioridade: 'tipo_prioridade',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CarteirasScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  saldo: 'saldo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CodigoIndicacaosScalarFieldEnum = {
  id: 'id',
  codigo: 'codigo',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CorridaAgendadasScalarFieldEnum = {
  id: 'id',
  passageiroCpf: 'passageiroCpf',
  motoristaCpf: 'motoristaCpf',
  origem: 'origem',
  destino: 'destino',
  dataHoraAgendada: 'dataHoraAgendada',
  status: 'status',
  tipo: 'tipo',
  valor: 'valor',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CorridasScalarFieldEnum = {
  id: 'id',
  origem: 'origem',
  destino: 'destino',
  status: 'status',
  valor: 'valor',
  tipo: 'tipo',
  horarioAgendado: 'horarioAgendado',
  usuarioId: 'usuarioId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DenunciaScalarFieldEnum = {
  id: 'id',
  autor_id: 'autor_id',
  alvo_id: 'alvo_id',
  tipo_alvo: 'tipo_alvo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_documento: 'tipo_documento',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailEnviadosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  email: 'email',
  tipo: 'tipo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistoricoIndicacaosScalarFieldEnum = {
  id: 'id',
  indicador_id: 'indicador_id',
  indicado_id: 'indicado_id',
  tipo: 'tipo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HistoricoSelfiesScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IdentidadesScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IndicacaosScalarFieldEnum = {
  id: 'id',
  indicanteId: 'indicanteId',
  indicadoId: 'indicadoId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.LogAcessosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_usuario: 'tipo_usuario',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MensagemSuportesScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_usuario: 'tipo_usuario',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RecompensasScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  descricao: 'descricao',
  valor: 'valor',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaquesScalarFieldEnum = {
  id: 'id',
  usuarioId: 'usuarioId',
  valor: 'valor',
  status: 'status',
  tipo: 'tipo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransacaosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  valor: 'valor',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  email: 'email',
  cpf: 'cpf',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VeiculosScalarFieldEnum = {
  id: 'id',
  motorista_id: 'motorista_id',
  modelo: 'modelo',
  placa: 'placa',
  ano: 'ano',
  categoria: 'categoria',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Agenda_corridasScalarFieldEnum = {
  id: 'id',
  passageiro_id: 'passageiro_id',
  categoria: 'categoria',
  endereco_origem: 'endereco_origem',
  endereco_destino: 'endereco_destino',
  data_hora: 'data_hora',
  status: 'status',
  motorista_id: 'motorista_id',
  valor_previsto: 'valor_previsto',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AvaliacoesScalarFieldEnum = {
  id: 'id',
  avaliador_id: 'avaliador_id',
  avaliado_id: 'avaliado_id',
  tipo: 'tipo',
  nota: 'nota',
  comentario: 'comentario',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Bairros_prioridadeScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cidade: 'cidade',
  estado: 'estado',
  ativo: 'ativo',
  tipo_prioridade: 'tipo_prioridade',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CarteirasScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  saldo: 'saldo',
  ultima_atualizacao: 'ultima_atualizacao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CorridasScalarFieldEnum = {
  id: 'id',
  id_motorista: 'id_motorista',
  id_passageiro: 'id_passageiro',
  origem: 'origem',
  destino: 'destino',
  status: 'status',
  distancia_km: 'distancia_km',
  valor_total: 'valor_total',
  forma_pagamento: 'forma_pagamento',
  data_hora: 'data_hora',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DenunciasScalarFieldEnum = {
  id: 'id',
  autor_id: 'autor_id',
  alvo_id: 'alvo_id',
  tipo_alvo: 'tipo_alvo',
  corrida_id: 'corrida_id',
  motivo: 'motivo',
  descricao: 'descricao',
  status: 'status',
  data_denuncia: 'data_denuncia',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DocumentosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_documento: 'tipo_documento',
  arquivo_url: 'arquivo_url',
  status: 'status',
  motivo_rejeicao: 'motivo_rejeicao',
  data_envio: 'data_envio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Emails_enviadosScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  email: 'email',
  tipo: 'tipo',
  titulo: 'titulo',
  conteudo: 'conteudo',
  status_envio: 'status_envio',
  data_envio: 'data_envio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Historico_indicacoesScalarFieldEnum = {
  id: 'id',
  indicador_id: 'indicador_id',
  indicado_id: 'indicado_id',
  tipo: 'tipo',
  data_vinculo: 'data_vinculo',
  codigo_utilizado: 'codigo_utilizado',
  ativo: 'ativo',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Historico_selfiesScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  imagem_url: 'imagem_url',
  resultado: 'resultado',
  motivo_falha: 'motivo_falha',
  data_envio: 'data_envio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Logs_acessoScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_usuario: 'tipo_usuario',
  acao: 'acao',
  descricao: 'descricao',
  ip: 'ip',
  dispositivo: 'dispositivo',
  data: 'data',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Mensagens_suporteScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo_usuario: 'tipo_usuario',
  mensagem: 'mensagem',
  resposta_sistema: 'resposta_sistema',
  status: 'status',
  data_envio: 'data_envio',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.Pagamentos_pessoaisScalarFieldEnum = {
  id: 'id',
  motorista_id: 'motorista_id',
  passageiro_id: 'passageiro_id',
  valor: 'valor',
  valor_maximo: 'valor_maximo',
  aceito_pelo_app: 'aceito_pelo_app',
  data_corrida: 'data_corrida',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ParadasScalarFieldEnum = {
  id: 'id',
  corrida_id: 'corrida_id',
  ordem: 'ordem',
  endereco: 'endereco',
  latitude: 'latitude',
  longitude: 'longitude',
  tempo_espera: 'tempo_espera',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RecompensasScalarFieldEnum = {
  id: 'id',
  indicador_id: 'indicador_id',
  indicado_id: 'indicado_id',
  tipo: 'tipo',
  valor: 'valor',
  status: 'status',
  data_gerada: 'data_gerada',
  referencia_corrida: 'referencia_corrida',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SaquesScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  valor: 'valor',
  status: 'status',
  tipo: 'tipo',
  pix: 'pix',
  data_pedido: 'data_pedido',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransacoesScalarFieldEnum = {
  id: 'id',
  usuario_id: 'usuario_id',
  tipo: 'tipo',
  origem: 'origem',
  descricao: 'descricao',
  valor: 'valor',
  data_transacao: 'data_transacao',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsuariosScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  tipo: 'tipo',
  email: 'email',
  senha: 'senha',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VeiculosScalarFieldEnum = {
  id: 'id',
  motorista_id: 'motorista_id',
  modelo: 'modelo',
  placa: 'placa',
  ano: 'ano',
  categoria: 'categoria',
  status: 'status',
  observacoes: 'observacoes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.enum_BairroPrioridades_tipo_prioridade = exports.$Enums.enum_BairroPrioridades_tipo_prioridade = {
  bonus: 'bonus',
  bloqueio: 'bloqueio',
  teste: 'teste'
};

exports.enum_Corridas_tipo = exports.$Enums.enum_Corridas_tipo = {
  imediata: 'imediata',
  agendada: 'agendada',
  personalizada: 'personalizada'
};

exports.enum_Denuncia_tipo_alvo = exports.$Enums.enum_Denuncia_tipo_alvo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_Documentos_tipo_documento = exports.$Enums.enum_Documentos_tipo_documento = {
  rg: 'rg',
  cnh: 'cnh',
  comprovante_residencia: 'comprovante_residencia',
  outro: 'outro'
};

exports.enum_EmailEnviados_tipo = exports.$Enums.enum_EmailEnviados_tipo = {
  cadastro: 'cadastro',
  recuperacao_senha: 'recuperacao_senha',
  recompensa: 'recompensa',
  outro: 'outro'
};

exports.enum_HistoricoIndicacaos_tipo = exports.$Enums.enum_HistoricoIndicacaos_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_HistoricoSelfies_tipo = exports.$Enums.enum_HistoricoSelfies_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_LogAcessos_tipo_usuario = exports.$Enums.enum_LogAcessos_tipo_usuario = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_MensagemSuportes_tipo_usuario = exports.$Enums.enum_MensagemSuportes_tipo_usuario = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_Recompensas_status = exports.$Enums.enum_Recompensas_status = {
  disponivel: 'disponivel',
  resgatado: 'resgatado'
};

exports.enum_Saques_status = exports.$Enums.enum_Saques_status = {
  pendente: 'pendente',
  processado: 'processado',
  recusado: 'recusado'
};

exports.enum_Saques_tipo = exports.$Enums.enum_Saques_tipo = {
  recompensa: 'recompensa',
  corrida: 'corrida'
};

exports.enum_Transacaos_tipo = exports.$Enums.enum_Transacaos_tipo = {
  corrida: 'corrida',
  recompensa: 'recompensa',
  saque: 'saque',
  ajuste: 'ajuste',
  bonus: 'bonus'
};

exports.enum_Veiculos_categoria = exports.$Enums.enum_Veiculos_categoria = {
  alpha: 'alpha',
  delta: 'delta',
  omega: 'omega',
  mala: 'mala',
  entrega: 'entrega',
  arca: 'arca'
};

exports.enum_agenda_corridas_categoria = exports.$Enums.enum_agenda_corridas_categoria = {
  alpha: 'alpha',
  delta: 'delta',
  omega: 'omega',
  mala: 'mala',
  entrega: 'entrega',
  arca: 'arca'
};

exports.enum_agenda_corridas_status = exports.$Enums.enum_agenda_corridas_status = {
  pendente: 'pendente',
  atribuida: 'atribuida',
  cancelada: 'cancelada',
  concluida: 'concluida'
};

exports.enum_avaliacoes_tipo = exports.$Enums.enum_avaliacoes_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_bairros_prioridade_tipo_prioridade = exports.$Enums.enum_bairros_prioridade_tipo_prioridade = {
  bonus: 'bonus',
  bloqueio: 'bloqueio',
  teste: 'teste'
};

exports.enum_carteiras_tipo = exports.$Enums.enum_carteiras_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_corridas_status = exports.$Enums.enum_corridas_status = {
  pendente: 'pendente',
  aceita: 'aceita',
  concluida: 'concluida',
  cancelada: 'cancelada'
};

exports.enum_corridas_forma_pagamento = exports.$Enums.enum_corridas_forma_pagamento = {
  dinheiro: 'dinheiro',
  pix: 'pix',
  cartao: 'cartao'
};

exports.enum_denuncias_tipo_alvo = exports.$Enums.enum_denuncias_tipo_alvo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_denuncias_status = exports.$Enums.enum_denuncias_status = {
  pendente: 'pendente',
  em_analise: 'em_analise',
  resolvida: 'resolvida'
};

exports.enum_documentos_tipo_documento = exports.$Enums.enum_documentos_tipo_documento = {
  rg: 'rg',
  cnh: 'cnh',
  comprovante_residencia: 'comprovante_residencia',
  outro: 'outro'
};

exports.enum_documentos_status = exports.$Enums.enum_documentos_status = {
  pendente: 'pendente',
  validado: 'validado',
  rejeitado: 'rejeitado'
};

exports.enum_emails_enviados_tipo = exports.$Enums.enum_emails_enviados_tipo = {
  cadastro: 'cadastro',
  recuperacao_senha: 'recuperacao_senha',
  recompensa: 'recompensa',
  outro: 'outro'
};

exports.enum_emails_enviados_status_envio = exports.$Enums.enum_emails_enviados_status_envio = {
  enviado: 'enviado',
  erro: 'erro',
  pendente: 'pendente'
};

exports.enum_historico_indicacoes_tipo = exports.$Enums.enum_historico_indicacoes_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_historico_selfies_tipo = exports.$Enums.enum_historico_selfies_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_historico_selfies_resultado = exports.$Enums.enum_historico_selfies_resultado = {
  validada: 'validada',
  rejeitada: 'rejeitada',
  pendente: 'pendente'
};

exports.enum_logs_acesso_tipo_usuario = exports.$Enums.enum_logs_acesso_tipo_usuario = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_mensagens_suporte_tipo_usuario = exports.$Enums.enum_mensagens_suporte_tipo_usuario = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_mensagens_suporte_status = exports.$Enums.enum_mensagens_suporte_status = {
  aberto: 'aberto',
  em_analise: 'em_analise',
  resolvido: 'resolvido'
};

exports.enum_recompensas_tipo = exports.$Enums.enum_recompensas_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_recompensas_status = exports.$Enums.enum_recompensas_status = {
  pendente: 'pendente',
  liberada: 'liberada',
  paga: 'paga'
};

exports.enum_saques_status = exports.$Enums.enum_saques_status = {
  pendente: 'pendente',
  aprovado: 'aprovado',
  recusado: 'recusado',
  pago: 'pago'
};

exports.enum_saques_tipo = exports.$Enums.enum_saques_tipo = {
  corrida: 'corrida',
  recompensa: 'recompensa',
  ambos: 'ambos'
};

exports.enum_transacoes_tipo = exports.$Enums.enum_transacoes_tipo = {
  corrida: 'corrida',
  recompensa: 'recompensa',
  saque: 'saque',
  ajuste: 'ajuste',
  bonus: 'bonus'
};

exports.enum_transacoes_origem = exports.$Enums.enum_transacoes_origem = {
  sistema: 'sistema',
  admin: 'admin',
  indicacao: 'indicacao',
  corrida: 'corrida',
  outro: 'outro'
};

exports.enum_usuarios_tipo = exports.$Enums.enum_usuarios_tipo = {
  motorista: 'motorista',
  passageiro: 'passageiro'
};

exports.enum_veiculos_categoria = exports.$Enums.enum_veiculos_categoria = {
  alpha: 'alpha',
  delta: 'delta',
  omega: 'omega',
  mala: 'mala',
  entrega: 'entrega',
  arca: 'arca'
};

exports.enum_veiculos_status = exports.$Enums.enum_veiculos_status = {
  ativo: 'ativo',
  pendente: 'pendente',
  reprovado: 'reprovado'
};

exports.Prisma.ModelName = {
  BairroPrioridades: 'BairroPrioridades',
  Carteiras: 'Carteiras',
  CodigoIndicacaos: 'CodigoIndicacaos',
  CorridaAgendadas: 'CorridaAgendadas',
  Corridas: 'Corridas',
  Denuncia: 'Denuncia',
  Documentos: 'Documentos',
  EmailEnviados: 'EmailEnviados',
  HistoricoIndicacaos: 'HistoricoIndicacaos',
  HistoricoSelfies: 'HistoricoSelfies',
  Identidades: 'Identidades',
  Indicacaos: 'Indicacaos',
  LogAcessos: 'LogAcessos',
  MensagemSuportes: 'MensagemSuportes',
  Recompensas: 'Recompensas',
  Saques: 'Saques',
  Transacaos: 'Transacaos',
  Usuarios: 'Usuarios',
  Veiculos: 'Veiculos',
  agenda_corridas: 'agenda_corridas',
  avaliacoes: 'avaliacoes',
  bairros_prioridade: 'bairros_prioridade',
  carteiras: 'carteiras',
  corridas: 'corridas',
  denuncias: 'denuncias',
  documentos: 'documentos',
  emails_enviados: 'emails_enviados',
  historico_indicacoes: 'historico_indicacoes',
  historico_selfies: 'historico_selfies',
  logs_acesso: 'logs_acesso',
  mensagens_suporte: 'mensagens_suporte',
  pagamentos_pessoais: 'pagamentos_pessoais',
  paradas: 'paradas',
  recompensas: 'recompensas',
  saques: 'saques',
  transacoes: 'transacoes',
  usuarios: 'usuarios',
  veiculos: 'veiculos'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
