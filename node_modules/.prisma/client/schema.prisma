generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id        String   @id @default(uuid())
  nome      String
  email     String   @unique
  senha     String
  cpf       String   @unique
  celular   String
  endereco  String?
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  Carteiras              Carteiras[]
  CorridasComoPassageiro Corridas[]    @relation("Passageiro")
  CorridasComoMotorista  Corridas[]    @relation("Motorista")
  Recompensas            Recompensas[]
}

model Corridas {
  id           String   @id @default(uuid())
  passageiroId String
  motoristaId  String?
  dataHora     DateTime
  localInicio  String
  localFim     String
  status       String
  createdAt    DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt    DateTime @updatedAt @db.Timestamptz(6)

  passageiro Usuarios  @relation("Passageiro", fields: [passageiroId], references: [id])
  motorista  Usuarios? @relation("Motorista", fields: [motoristaId], references: [id])

  Recompensas Recompensas[]
}

model Recompensas {
  id        String   @id @default(uuid())
  usuarioId String
  corridaId String?
  valor     Float
  tipo      String
  data      DateTime
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  usuario Usuarios  @relation(fields: [usuarioId], references: [id])
  corrida Corridas? @relation(fields: [corridaId], references: [id])
}

model Carteiras {
  id        String   @id @default(uuid())
  usuarioId String   @unique
  saldo     Float    @default(0)
  createdAt DateTime @default(dbgenerated("now()")) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)

  usuario Usuarios @relation(fields: [usuarioId], references: [id])
}
